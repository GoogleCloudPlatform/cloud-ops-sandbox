# Copyright 2020 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: "End to End Tests"
on:
  push:
    # run on pushes to master or release/*
    branches:
      - master
      - release/*
      - e2e-test
  pull_request:
    # run on pull requests targeting master
    branches:
      - master
jobs:
  end-to-end:
    runs-on: [self-hosted, e2e-worker]
    steps:
    - uses: actions/checkout@v2
    - name: Clean Project State
      run: |
        .github/workflows/e2e_scripts/clean.sh
    - name: Check Project State
      run: |
        .github/workflows/e2e_scripts/check.sh
    - name: Build Sandbox Services
      run: |
        set -x
        skaffold config set --global local-cluster false
        # tag with git hash
        skaffold build --default-repo=gcr.io/$PROJECT_ID \
                       --tag=$GITHUB_SHA
      env:
        PROJECT_ID: ${{ secrets.E2E_PROJECT_ID  }}
    - name: Build Cloud Shell Image
      run: |
        set -x
        # build cloud shell image
        docker build -t cloud-shell-$GITHUB_SHA ./cloud-shell
        docker create \
            --env GOOGLE_APPLICATION_CREDENTIALS=/service-account.json \
            --env PROJECT_ID=$PROJECT_ID \
            --env BILLING_ID=$BILLING_ID \
            --name test-runner \
            --rm \
            cloud-shell-$GITHUB_SHA
        # copy over local git repo
        docker cp ../stackdriver-sandbox test-runner:/sandbox
        # copy over service account
        #cat $SERVICE_ACCOUNT > /dev/shm/service-account.json
        #docker cp /dev/shm/service-account.json test-runner:/service-account.json
        #rm /dev/shm/service-account.json
      env:
        PROJECT_ID: ${{ secrets.E2E_PROJECT_ID  }}
        BILLING_ID: ${{ secrets.E2E_BILLING_ID  }}
        SERVICE_ACCOUNT: ${{ secrets.E2E_SERVICE_ACCOUNT  }}

    #- name: Run Install Script
    #  run: |
    #    set -x
    #    terraform/install.sh -p $PROJECT_ID -b $BILLING_ID
    #  env:
    #    PROJECT_ID: ${{ secrets.E2E_PROJECT_ID  }}
    #    BILLING_ID: ${{ secrets.E2E_BILLING_ID  }}
