# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:
- id: 'Verify Terraform state bucket existence'
  name: 'gcloud'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      bucket_url=`gcloud storage buckets list gs://$_STATE_BUCKET_NAME --uri --project=$PROJECT_ID`
      if [ -z $"bucket_url" ]; then
        echo "Project $PROJECT_ID does not have Terraform state bucket $_STATE_BUCKET_NAME"
        exit 1
      fi

- id: 'Initialize Terraform'
  name: 'hashicorp/terraform:1.3.1'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      terraform -chdir=terraform/ init -backend-config="bucket=$_STATE_BUCKET_NAME"

- id: 'Apply Terraform configuration'
  name: 'hashicorp/terraform:1.3.1'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      terraform -chdir=terraform/ apply -auto-approve -var="project_id=$PROJECT_ID" -var="state_bucket_name=$_STATE_BUCKET_NAME" -var="$(readlink -f tests/test-app)"

- id: 'Cleanup Terraform configuration'
  name: 'hashicorp/terraform:1.3.1'
  entrypoint: 'sh'
  args: 
  - '-c'
  - | 
      terraform -chdir=terraform/ destroy -auto-approve -var="project_id=$PROJECT_ID" -var="state_bucket_name=$_STATE_BUCKET_NAME" -var="$(readlink -f tests/test-app)"